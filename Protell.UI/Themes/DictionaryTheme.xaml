<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Convertidor="clr-namespace:Protell.UI.v2">

    <LinearGradientBrush x:Key="DegradadoBordeSubMenuConagua" EndPoint="0.504,1.5" StartPoint="0.504,0.03">
        <GradientStop Color="#61FFFFFF" Offset="0.567"/>
    </LinearGradientBrush>

    <Style x:Key="BorderMinMAxCerrar" TargetType="{x:Type Border}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource DegradadoBordeSubMenuConagua}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="textBockMInMaxCerrar" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="Black"></Setter>
        <Setter Property="FontSize" Value="13"></Setter>
        <Setter Property="FontFamily" Value="Webdings"></Setter>
    </Style>

    <Style x:Key="BorderMinMAxCerrarLogin" TargetType="{x:Type Border}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="SkyBlue" />
                <Setter Property="Opacity" Value=".1"/>
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="textBockMInMaxCerrarLogin" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="Black"></Setter>
        <Setter Property="FontSize" Value="13"></Setter>
        <Setter Property="FontWeight" Value="Light"></Setter>
        <Setter Property="FontFamily" Value="Webdings"></Setter>
    </Style>

    <Storyboard x:Key="rotateImg" >
        <DoubleAnimation Storyboard.TargetName="imgSyncFiles" 
                             Storyboard.TargetProperty="(RenderTransform).(RotateTransform.Angle)"
                             From="0" To="360" Duration="0:0:1" 
                             AutoReverse="False" RepeatBehavior="Forever" />
    </Storyboard>

    <!--<Style x:Key="{x:Static SystemParameters.FocusVisualStyleKey}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle StrokeThickness="5"
          Stroke="Green"
          StrokeDashArray="1 2"
          SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style x:Key="MyFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>                    
                        <Rectangle Stroke="#FF1BA1E2" Margin="-4" StrokeThickness="2" AllowDrop="True"/>                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyPasswordStyle">                   
    </Style>

    <Style x:Key="DatagridColumnHeaderStyle_Effects" 
         TargetType="{x:Type DataGridColumnHeader}">

        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Foreground" Value="#353638" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid Name="HedearGrid" Background="#E6E6E6" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="BackgroundBorder" BorderThickness="0,0,0,0"  BorderBrush="Black" Grid.ColumnSpan="2" />
                        <ContentPresenter  Margin="6,3,6,3" VerticalAlignment="Center" Grid.Column="0" />
                        <Path x:Name="SortArrow" Visibility="Collapsed" Data="M0,0 L1,0 0.5,1 z" Stretch="Fill" 
                            Grid.Column="1" Width="8" Height="6" Fill="Blue" Margin="0,0,8,0" 
                            VerticalAlignment="Center" RenderTransformOrigin="0.5,0.4" />
                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Cursor="SizeWE" 
                                   Grid.Column="1" >
                            <Thumb.Style>
                                <Style TargetType="{x:Type Thumb}">
                                    <Setter Property="Width" Value="2" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Border Background="Transparent"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Thumb.Style>
                        </Thumb>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="HedearGrid"  Value="#21ffaabb" />
                        </Trigger>

                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SortArrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GridStyle" TargetType="{x:Type DataGrid}">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="GridLinesVisibility"  Value="Horizontal" />
        <Setter Property="BorderBrush" Value="White" />
        <Setter Property="Foreground" Value="#353638" />
        <Setter Property="HorizontalGridLinesBrush" Value="#f0f6ff"/>
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="RowBackground" Value="#F9F7F6"/>
        <Setter Property="AlternatingRowBackground" Value="#EBEAE9"/>

    </Style>

    <Style x:Key="RowStyle" TargetType="{x:Type DataGridRow}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#A9F5F2" />
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ListViewElara" TargetType="{x:Type ListView}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border Name="Border"
          BorderThickness="1"
          BorderBrush="#FFFFFF"
          Background="#FFFFFF">
                        <ScrollViewer Style="{DynamicResource
                        {x:Static GridView.GridViewScrollViewerStyleKey}}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping"
                   Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll"
                    Value="false"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                   Value="false">

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type GridViewColumnHeader}"
       TargetType="GridViewColumnHeader">
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontFamily" Value="Arial Rounded MT"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader">
                    <Grid>
                        <Border Name="HeaderBorder"
            BorderThickness="0,1,0,1"
            BorderBrush="#E6E6E6"
            Background="#E6E6E6"
            Padding="2,0,2,0">
                            <ContentPresenter Name="HeaderContent"
              Margin="0,0,0,1"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              RecognizesAccessKey="True"
              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="HeaderBorder"
                    Property="Background" Value="#E6E6E6"/>
                            <Setter TargetName="HeaderContent"
                    Property="Margin" Value="1,1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground"
                    Value="#E6E6E6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Role" Value="Floating">
                <Setter Property="Opacity" Value="0.7"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <Canvas Name="PART_FloatingHeaderCanvas">
                                <Rectangle Fill="#60000000"
                Width="{TemplateBinding ActualWidth}"
                Height="{TemplateBinding ActualHeight}"/>
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role" Value="Padding">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <Border Name="HeaderBorder"
              BorderThickness="0,1,0,1"
              BorderBrush="#E6E6E6"
              Background="#E6E6E6"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="styleCheck"
           TargetType="CheckBox">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border" Width="13" Height="13" CornerRadius="3" Background="#A9D5F3" BorderThickness="1" BorderBrush="LightBlue">
                                <Path Width="7" Height="7" x:Name="CheckMark" SnapsToDevicePixels="False" Stroke="#E25061" StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0" />

                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="4,0,0,0"
              VerticalAlignment="Center"
              HorizontalAlignment="Left"
              RecognizesAccessKey="True"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#BABEC1" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="textBockMenuCatalogo" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#E6E6E6"></Setter>
        <Setter Property="FontFamily" Value="Verdana"></Setter>
        <Setter Property="FontWeight" Value="Normal"></Setter>
        <Setter Property="FontSize" Value="16"></Setter>
    </Style>

    <Style x:Key="BorderBordeMenu" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="#585858"/>
        <Setter Property="BorderThickness" Value="0,1,0,1"/>
        <Setter Property="Background" Value="#424242"/>
    </Style>

    <Style x:Key="textBockMenu" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#D8D8D8"></Setter>
        <Setter Property="FontFamily" Value="Arial"></Setter>
        <Setter Property="FontWeight" Value="SemiBold"></Setter>
        <Setter Property="FontSize" Value="14"></Setter>
    </Style>

    <Style x:Key="BorderMenu" TargetType="{x:Type Border}">
        <Setter Property="Cursor" Value="Hand" />
        <Style.Triggers>
            <Trigger Property="Border.IsMouseOver" Value="True">
                <Setter Property="Border.Background" Value="#A9E2F3" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="textBockRegistroVista" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#6E6E6E"></Setter>
        <Setter Property="FontFamily" Value="Verdana"></Setter>
        <Setter Property="FontWeight" Value="SemiBold"></Setter>
        <Setter Property="FontSize" Value="12"></Setter>
    </Style>
    
    <Style x:Key="textBockRegistro" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#6E6E6E"></Setter>
        <Setter Property="FontFamily" Value="Verdana"></Setter>
        <Setter Property="FontWeight" Value="Normal"></Setter>
        <Setter Property="FontSize" Value="11.5"></Setter>
    </Style>
    
    <Style x:Key="textBockRegistroTitulo" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#585858"></Setter>
        <Setter Property="FontFamily" Value="Verdana"></Setter>
        <Setter Property="FontWeight" Value="SemiBold"></Setter>
        <Setter Property="FontSize" Value="13"></Setter>
    </Style>

    <Style x:Key="textBockConsultaRegistroFecha" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#585858"></Setter>
        <Setter Property="FontFamily" Value="Verdana"></Setter>
        <Setter Property="FontWeight" Value="Normal"></Setter>
        <Setter Property="FontSize" Value="9"></Setter>
    </Style>

    <Style x:Key="textBockConsultaRegistroHora" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#424242"></Setter>
        <Setter Property="FontFamily" Value="Arial Rounded MT"></Setter>
        <Setter Property="FontWeight" Value="Normal"></Setter>
        <Setter Property="FontSize" Value="15"></Setter>
    </Style>

    <Style x:Key="textBockConsultaRegistroPuntoMedicion" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#585858"></Setter>
        <Setter Property="FontFamily" Value="Verdana"></Setter>
        <Setter Property="FontWeight" Value="Normal"></Setter>
        <Setter Property="FontSize" Value="15"></Setter>
    </Style>
    
    <Style x:Key="textBockConsultaRegistroTipoMedicion" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#424242"></Setter>
        <Setter Property="FontFamily" Value="Arial Rounded MT"></Setter>
        <Setter Property="FontWeight" Value="Normal"></Setter>
        <Setter Property="FontSize" Value="15"></Setter>
    </Style>

    <Style x:Key="bntBlue" TargetType="{x:Type Button}">
        <Setter Property="BorderBrush" Value="Gainsboro"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="#424242"></Setter>
        <Setter Property="FontFamily" Value="Arial Unicode MS"></Setter>
        <Setter Property="FontWeight" Value="SemiBold"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter  Property="Background" Value="#E6E6E6" />
                            <Setter  Property="BorderBrush" Value="#ABB1B2" />
                            <Setter Property="Foreground" Value="#A4A4A4"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#F2F2F2" />
                            <Setter Property="Foreground" Value="#424242"/>
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="UserControlRegistro" TargetType="{x:Type UserControl}">
        <Setter Property="Cursor" Value="Hand" />
        <Style.Triggers>
            <Trigger Property="Border.IsMouseOver" Value="True">
                <Setter Property="Border.Background" Value="#515252" />
            </Trigger>
            
        </Style.Triggers>
    </Style>

    
    <Style x:Key="ListBoxStyle" TargetType="{x:Type ListBox}">
        <Setter Property="ItemContainerStyle" Value="{DynamicResource ListboxItemStyle}" />
        <Setter Property="Background" Value="#2E2E2E" />
    </Style>
   
    <Style x:Key="ListboxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="#2E2E2E" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}" BorderThickness ="0,1,1,0" BorderBrush="#585858" />
                        <TextBlock Name="TheBGControl"/>
                        <ContentPresenter Margin="10,3" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#0489B1" TargetName="TheBGControl"  />
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#FA5858" TargetName="TheBGControl" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListBoxItemStyle_2" TargetType="ListBoxItem">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>        
    </Style>

    <Style x:Key="ListBoxSubMenu" TargetType="{x:Type ListBox}">
        <Setter Property="ItemContainerStyle" Value="{DynamicResource ListboxItemSubMenu}" />
        <Setter Property="Background" Value="#F2F2F2" />
        <Setter Property="BorderBrush" Value="Transparent" />
    </Style>

    <Style x:Key="ListboxItemSubMenu" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    
                    <Border Background="#E6E6E6" Margin="0,3"
                            BorderThickness ="1,1,1,1" BorderBrush="Silver"
                            x:Name="IconBorder" Width="385" >
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#58D3F7" TargetName="IconBorder"  />
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="#FA5858" TargetName="IconBorder"  />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="bntNuevo" TargetType="{x:Type Button}">
        <Setter Property="BorderBrush" Value="#424242"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="#D8D8D8"/>
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="#424242"></Setter>
        <Setter Property="FontFamily" Value="Arial Unicode MS"></Setter>
        <Setter Property="FontWeight" Value="SemiBold"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter  Property="Background" Value="#E6E6E6" />
                            <Setter  Property="BorderBrush" Value="#ABB1B2" />
                            <Setter Property="Foreground" Value="#A4A4A4"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#F2F2F2" />
                            <Setter Property="Foreground" Value="#424242"/>
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>